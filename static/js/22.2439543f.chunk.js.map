{"version":3,"sources":["styles/Result.module.css","components/CircleBar.js","components/Wrapper.js","components/ToggleButton.js","components/Solutions.js","containers/Result.js"],"names":["module","exports","Svg","styled","svg","Circle","animated","circle","Text","text","CircleBar","size","progress","strokeWidth","circleOneStroke","circleTwoStroke","circleRef","useRef","radius","circumference","Math","PI","useSpring","offset","config","slow","number","value","set","useEffect","center","Fragment","width","height","stroke","cx","cy","r","style","transform","transformOrigin","strokeDashoffset","interpolate","x","ref","strokeDasharray","y","toFixed","Card","div","Wrapper","props","children","Button","button","color","opacit","ToggleButton","opacity","onClick","clicked","title","Title","h1","Content","p","Solutions","content","UL","ul","LI","li","entryoptionsdep","Result","useState","tips","setTips","setTitle","solutions","setSolutions","active","setActive","data","setData","percentile","setPercentile","params","useParams","testname","values","name","sessionStorage","getItem","email","split","link","forEach","ele","index","length","score","fetch","method","headers","then","console","log","catch","err","alert","message","finally","str","s","Arr","push","trunc","DepressionData","depression","anxiety","clickHandler","id","toggle","className","styles","wrapper","resultTitle","buttonWrapper","solutionTitle","solutionsTitle","map","solution"],"mappings":"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","file":"static/js/22.2439543f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Result_wrapper__oWRXK\",\"resultTitle\":\"Result_resultTitle__iwrzP\",\"buttonWrapper\":\"Result_buttonWrapper__37d-E\",\"solutionTitle\":\"Result_solutionTitle__37Aec\"};","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\nconst Svg = styled.svg`\r\n  display: block;\r\n  margin: 20px auto;\r\n  max-widtdh: 100%;\r\n`;\r\n\r\nconst Circle = styled(animated.circle)`\r\n  fill: none;\r\n`;\r\n\r\nconst Text = styled(animated.text)`\r\n  font-size: 3rem;\r\n  text-anchor: middle;\r\n  fill: #000;\r\n  font-weight: bold;\r\n`;\r\nconst CircleBar = ({\r\n  size,\r\n  progress,\r\n  strokeWidth,\r\n  circleOneStroke,\r\n  circleTwoStroke,\r\n}) => {\r\n  const circleRef = useRef(null);\r\n  const radius = size / 2 - strokeWidth / 2;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const [value, set] = useSpring(() => ({\r\n    offset: circumference,\r\n    config: config.slow,\r\n    number: 0,\r\n  }));\r\n  useEffect(() => {\r\n    const progressOffset = circumference - (progress / 100) * circumference;\r\n    set({ offset: progressOffset, number: progress });\r\n  }, [set, circumference, progress]);\r\n\r\n  const center = size / 2;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Svg width={size} height={size}>\r\n        <Circle\r\n          stroke={circleOneStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n        />\r\n        <Circle\r\n          style={{\r\n            transform: \"rotate(-90deg)\",\r\n            transformOrigin: \"50% 50%\",\r\n            strokeDashoffset: value.offset.interpolate((x) => x),\r\n          }}\r\n          ref={circleRef}\r\n          stroke={circleTwoStroke}\r\n          cx={center}\r\n          cy={center}\r\n          r={radius}\r\n          strokeWidth={strokeWidth}\r\n          strokeDasharray={circumference}\r\n        />\r\n        <Text x={center + 8} y={center + 18}>\r\n          {value.number.interpolate((x) => x.toFixed(0) + \"%\")}\r\n        </Text>\r\n      </Svg>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CircleBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 22px;\r\n  padding: 40px 10px;\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0px 2px 20px 0px rgba(0, 0, 0, 0.2);\r\n  @media screen and (min-width: 700px) {\r\n    width: 60%;\r\n  }\r\n  @media screen and (min-width: 1200px) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nconst Wrapper = (props) => <Card>{props.children}</Card>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  padding: 5px;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: none;\r\n  background-color: ${(props) => props.color};\r\n  border-radius: 50%;\r\n  font-size: 20px;\r\n  color: white;\r\n  opacity: ${(props) => (props.opacit ? \"0.3\" : \"1\")};\r\n  cursor: pointer;\r\n  transition: all 0.2s linear;\r\n`;\r\n\r\nconst ToggleButton = (props) => (\r\n  <Button color={props.color} opacit={props.opacity} onClick={props.clicked}>\r\n    {props.title}\r\n  </Button>\r\n);\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  width: 90%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Content = styled.p`\r\n  width: 85%;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 28px;\r\n  padding: 10px 0px;\r\n`;\r\n\r\nconst Solutions = (props) => (\r\n  <Wrapper>\r\n    <Title>{props.title}</Title>\r\n    <Content>{props.content}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Solutions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styles/Result.module.css\";\r\n\r\nimport CircleBar from \"../components/CircleBar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Wrapper from \"../components/Wrapper\";\r\nimport ToggleButton from \"../components/ToggleButton\";\r\nimport Solutions from \"../components/Solutions\";\r\nimport DepressionData from \"../helpers/Depression.json\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UL = styled.ul`\r\n  list-style: none;\r\n  margin-top: 40px;\r\n`;\r\nconst LI = styled.li`\r\n  font-size: 24px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst entryoptionsdep = [\r\n  \"entry.1758988128\",\r\n  \"entry.1916594965\",\r\n  \"entry.1099754452\",\r\n  \"entry.1080084900\",\r\n  \"entry.1908846467\",\r\n  \"entry.432366185\",\r\n  \"entry.1335405081\",\r\n  \"entry.2124050225\",\r\n  \"entry.450037869\",\r\n  \"entry.1344163733\",\r\n  \"entry.1575855845\",\r\n  \"entry.1070229833\",\r\n];\r\nconst Result = (props) => {\r\n  const [tips, setTips] = useState([false, true, true]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [solutions, setSolutions] = useState([0, 1, 2]);\r\n  const [active, setActive] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [percentile, setPercentile] = useState(1);\r\n  const params = useParams();\r\n  useEffect(() => {\r\n    if (params.testname === \"Depression\") {\r\n      const values = [\r\n        \"Not+at+all\",\r\n        \"Several+days\",\r\n        \"More+than+half+days\",\r\n        \"Nearly+everyday\",\r\n      ];\r\n      const name = sessionStorage.getItem(\"name\");\r\n      const email = sessionStorage.getItem(\"testemail\");\r\n      const data = sessionStorage.getItem(\"data\").split(\",\");\r\n      let link = `https://docs.google.com/forms/d/e/1FAIpQLSdaUun4-lKr9hkPmjtLQsbl24SPO3-Gh5OS8_JzokqGH8eERA/formResponse?${entryoptionsdep[0]}=${name}&${entryoptionsdep[1]}=${email}`;\r\n      data.forEach((ele, index) => {\r\n        link += `&${entryoptionsdep[index + 2]}=${values[+ele]}`;\r\n      });\r\n      link += `&${entryoptionsdep[entryoptionsdep.length - 1]}=${(\r\n        (+params.score / 27) *\r\n        100\r\n      ).toFixed(0)}`;\r\n      fetch(`https://rocky-everglades-76525.herokuapp.com/${link}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"xml\",\r\n        },\r\n      })\r\n        .then(() => console.log(\"uploaded\"))\r\n        .catch((err) => alert(err.message))\r\n        .finally(() => console.log(\"done\"));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    let s = params.score;\r\n    let str;\r\n    let name = params.testname;\r\n\r\n    if (name === \"Depression\") {\r\n      let Arr = [];\r\n      let tips = params.tips;\r\n      if (tips < 100) {\r\n        Arr.push(0);\r\n      }\r\n      while (tips > 0) {\r\n        Arr.push(tips % 10);\r\n        tips = Math.trunc(tips / 10);\r\n      }\r\n      setSolutions(Arr);\r\n      setActive(Arr[0]);\r\n\r\n      setData(DepressionData.depression);\r\n      setPercentile(27);\r\n      if (s <= 4) {\r\n        str = \"Minimal depression\";\r\n      } else if (s > 4 && s <= 9) {\r\n        str = \"Mild depression\";\r\n      } else if (s > 9 && s <= 14) {\r\n        str = \"Moderate depression\";\r\n      } else if (s > 14 && s <= 19) {\r\n        str = \"Moderately severe depression\";\r\n      } else {\r\n        str = \"Severe depression\";\r\n      }\r\n    } else if (name === \"Anxiety\") {\r\n      setData(DepressionData.anxiety);\r\n      setPercentile(21);\r\n      if (s <= 5) {\r\n        str = \"Minimal anxiety\";\r\n      } else if (s > 5 && s <= 9) {\r\n        str = \"Mild anxiety\";\r\n      } else if (s > 9 && s <= 14) {\r\n        str = \"Moderate anxiety\";\r\n      } else {\r\n        str = \"Severe anxiety\";\r\n      }\r\n    } else if (name === \"Stress\") {\r\n      setPercentile(40);\r\n      if (s < 13) {\r\n        str = \"Low stress\";\r\n      } else if (s >= 13 && s < 26) {\r\n        str = \"Moderate stress\";\r\n      } else {\r\n        str = \"High perceived stress\";\r\n      }\r\n    }\r\n\r\n    setTitle(str);\r\n  }, [params.score, params.testname, params.tips]);\r\n\r\n  const clickHandler = (id) => {\r\n    const toggle = [true, true, true];\r\n    toggle[id] = false;\r\n    setTips(toggle);\r\n    setActive(solutions[id]);\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1 className={styles.resultTitle}>Result: {title}</h1>\r\n      <CircleBar\r\n        progress={(+params.score / percentile) * 100}\r\n        circleOneStroke=\"#F5F5F5\"\r\n        circleTwoStroke=\"#70db70\"\r\n        size={260}\r\n        strokeWidth={14}\r\n      />\r\n      {data.length ? (\r\n        <>\r\n          {data[solutions[0]].title !== \"\" ? (\r\n            <Wrapper>\r\n              <h1>What is affecting you:</h1>\r\n              <UL>\r\n                <LI>{data[solutions[0]].title}</LI>\r\n                <LI>{data[solutions[1]].title}</LI>\r\n                <LI>{data[solutions[2]].title}</LI>\r\n              </UL>\r\n            </Wrapper>\r\n          ) : null}\r\n\r\n          <Wrapper>\r\n            <h1>Suggested solutions</h1>\r\n            <div className={styles.buttonWrapper}>\r\n              <ToggleButton\r\n                title=\"1\"\r\n                color=\"#70db70\"\r\n                opacity={tips[0]}\r\n                clicked={() => clickHandler(0)}\r\n              />\r\n              <ToggleButton\r\n                title=\"2\"\r\n                color=\"#70db70\"\r\n                opacity={tips[1]}\r\n                clicked={() => clickHandler(1)}\r\n              />\r\n              <ToggleButton\r\n                title=\"3\"\r\n                color=\"#70db70\"\r\n                opacity={tips[2]}\r\n                clicked={() => clickHandler(2)}\r\n              />\r\n            </div>\r\n            <h1 className={styles.solutionTitle}>\r\n              {data[active].solutionsTitle}\r\n            </h1>\r\n            {data[active].solutions.map((solution) => (\r\n              <Solutions title={solution.title} content={solution.content} />\r\n            ))}\r\n          </Wrapper>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"sourceRoot":""}