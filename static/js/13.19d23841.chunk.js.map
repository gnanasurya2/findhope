{"version":3,"sources":["styles/SafeSpace.module.css","asset/edit.svg","components/Strip.js","containers/SafeSpace.js","components/Photo.js"],"names":["module","exports","Wrapper","styled","div","Img","img","Button","button","Strip","props","history","useHistory","title","onClick","JSON","parse","sessionStorage","getItem","members","length","push","src","Edit","alt","SafeSpace","useState","data","setData","db","setDb","useEffect","firebase","then","firestore","email","collection","where","get","querySnapshot","size","forEach","doc","name","id","console","log","setItem","stringify","alert","className","styles","wrapper","filter","ele","role","map","mem","card","Photo","url","Image","Name","h1","color","process","photo"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,MAAQ,yBAAyB,KAAO,0B,oBCD/FD,EAAOC,QAAU,IAA0B,kC,upBCK3C,IAAMC,EAAUC,IAAOC,IAAV,KAaPC,EAAMF,IAAOG,IAAV,KAIHC,EAASJ,IAAOK,OAAV,KAyBGC,EApBD,SAACC,GACb,IAAMC,EAAUC,cAShB,OACE,kBAACV,EAAD,KACE,4BAAKQ,EAAMG,OACX,kBAACN,EAAD,CAAQO,QAXS,WACNC,KAAKC,MAAMC,eAAeC,QAAQ,SACtCC,QAAQC,OACfT,EAAQU,KAAK,kBAAoBX,EAAMG,OAEvCF,EAAQU,KAAK,iBAAmBX,EAAMG,SAOpC,kBAACR,EAAD,CAAKiB,IAAKC,IAAMC,IAAI,Y,gBCoBbC,UAvDG,SAACf,GAAW,IAAD,EACHgB,mBAAS,MADN,mBACpBC,EADoB,KACdC,EADc,OAEPF,mBAAS,MAFF,mBAEpBG,EAFoB,KAEhBC,EAFgB,KA4B3B,OAzBAC,qBAAU,WACRC,IAASC,MAAK,SAACD,GAAD,OAAcF,EAAME,EAASE,kBAC1C,IACHH,qBAAU,WACR,IAAMI,EAAQlB,eAAeC,QAAQ,SACjCW,GACFA,EAAGO,WAAW,aACXC,MAAM,QAAS,KAAMF,GACrBG,MACAL,MAAK,SAACM,GACAA,EAAcC,KAGjBD,EAAcE,SAAQ,SAACC,GACrBd,EAAQ,aAAEe,KAAMD,EAAIE,IAAOF,EAAIf,SAC/BkB,QAAQC,IAAIJ,EAAIf,QAChBV,eAAe8B,QACb,OACAhC,KAAKiC,UAAL,aAAiBL,KAAMD,EAAIE,IAAOF,EAAIf,aAP1CsB,MAAM,0BAab,CAACpB,IAEF,yBAAKqB,UAAWC,IAAOC,SACpBzB,EACC,oCACE,wBAAIuB,UAAWC,IAAOtC,OAAtB,aAAwCc,EAAKgB,MAC7C,kBAAC,EAAD,CAAO9B,MAAM,YACZc,EAAKR,QACHkC,QAAO,SAACC,GAAD,MAAsB,YAAbA,EAAIC,QACpBC,KAAI,SAACC,GAAD,OACH,yBAAKP,UAAWC,IAAOO,MACrB,kBAACC,EAAA,EAAD,CAAO9C,MAAO4C,EAAId,KAAMiB,IAAKH,EAAIG,UAGvC,kBAAC,EAAD,CAAO/C,MAAM,WACZc,EAAKR,QACHkC,QAAO,SAACC,GAAD,MAAsB,WAAbA,EAAIC,QACpBC,KAAI,SAACC,GAAD,OACH,yBAAKP,UAAWC,IAAOO,MACrB,kBAACC,EAAA,EAAD,CAAO9C,MAAO4C,EAAId,KAAMiB,IAAKH,EAAIG,WAIvC,Q,siBCrDV,IAAM1D,EAAUC,IAAOC,IAAV,KASPyD,EAAQ1D,IAAOG,IAAV,KAMLwD,EAAO3D,IAAO4D,GAAV,KAGC,SAACrD,GAAD,OAAWA,EAAMsD,SAgBbL,IAbD,SAACjD,GACb,OACE,kBAACR,EAAD,KACE,kBAAC2D,EAAD,CACEvC,IAAKZ,EAAMkD,KAAOK,GAAA,kBAAoCvD,EAAMwD,OAC5D1C,IAAI,qBAEN,kBAACsC,EAAD,CAAME,MAAOtD,EAAMsD,OAAQtD,EAAMiC,MACjC,4BAAKjC,EAAMG","file":"static/js/13.19d23841.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SafeSpace_wrapper__1d-lM\",\"title\":\"SafeSpace_title__3hfuC\",\"card\":\"SafeSpace_card__7W0k8\"};","module.exports = __webpack_public_path__ + \"static/media/edit.48b4c803.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Edit from \"../asset/edit.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 50px;\n  background-color: orange;\n  border-radius: 10px;\n  padding: 0px 15px;\n  margin: 15px 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Img = styled.img`\n  height: 25px;\n`;\n\nconst Button = styled.button`\n  border: none;\n  background: transparent;\n  cursor: pointer;\n`;\nconst Strip = (props) => {\n  const history = useHistory();\n  const clickHandler = () => {\n    const data = JSON.parse(sessionStorage.getItem(\"data\"));\n    if (data.members.length) {\n      history.push(\"/memberprofile/\" + props.title);\n    } else {\n      history.push(\"/profilemaker/\" + props.title);\n    }\n  };\n  return (\n    <Wrapper>\n      <h2>{props.title}</h2>\n      <Button onClick={clickHandler}>\n        <Img src={Edit} alt=\"edit\" />\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Strip;\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/SafeSpace.module.css\";\nimport Strip from \"../components/Strip\";\nimport firebase from \"../helpers/firebase\";\nimport Photo from \"../components/Photo\";\n\nconst SafeSpace = (props) => {\n  const [data, setData] = useState(null);\n  const [db, setDb] = useState(null);\n  useEffect(() => {\n    firebase.then((firebase) => setDb(firebase.firestore()));\n  }, []);\n  useEffect(() => {\n    const email = sessionStorage.getItem(\"email\");\n    if (db) {\n      db.collection(\"safespace\")\n        .where(\"email\", \"==\", email)\n        .get()\n        .then((querySnapshot) => {\n          if (!querySnapshot.size) {\n            alert(\"account not found\");\n          } else {\n            querySnapshot.forEach((doc) => {\n              setData({ name: doc.id, ...doc.data() });\n              console.log(doc.data());\n              sessionStorage.setItem(\n                \"data\",\n                JSON.stringify({ name: doc.id, ...doc.data() })\n              );\n            });\n          }\n        });\n    }\n  }, [db]);\n  return (\n    <div className={styles.wrapper}>\n      {data ? (\n        <>\n          <h1 className={styles.title}>SafeSpace {data.name}</h1>\n          <Strip title=\"Founder\" />\n          {data.members\n            .filter((ele) => ele.role === \"Founder\")\n            .map((mem) => (\n              <div className={styles.card}>\n                <Photo title={mem.name} url={mem.url} />\n              </div>\n            ))}\n          <Strip title=\"Member\" />\n          {data.members\n            .filter((ele) => ele.role === \"Member\")\n            .map((mem) => (\n              <div className={styles.card}>\n                <Photo title={mem.name} url={mem.url} />\n              </div>\n            ))}\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nexport default SafeSpace;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 20px 0px;\n`;\n\nconst Image = styled.img`\n  width: 150px;\n  height: 150px;\n  border-radius: 50%;\n`;\n\nconst Name = styled.h1`\n  font-size: 32px;\n  margin: 5px 0px;\n  color: ${(props) => props.color};\n  text-align: center;\n`;\nconst Photo = (props) => {\n  return (\n    <Wrapper>\n      <Image\n        src={props.url || process.env.PUBLIC_URL + `/assest/${props.photo}`}\n        alt=\"find hope member\"\n      />\n      <Name color={props.color}>{props.name}</Name>\n      <h2>{props.title}</h2>\n    </Wrapper>\n  );\n};\n\nexport default Photo;\n"],"sourceRoot":""}