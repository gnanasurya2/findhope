{"version":3,"sources":["asset/Hope Logo.svg","components/Hamburger.js","components/Layout.js","withTracker.js","App.js","serviceWorker.js","index.js","styles/Layout.module.css"],"names":["module","exports","Wrapper","styled","div","Bar","animated","props","color","Hamburger","useSpring","opacity","angle","value","set","useEffect","toggle","onClick","style","interpolate","x","transform","position","top","Layout","useState","display","setOpacity","setToggle","width","openMenuHandler","state","className","styles","head","logo","to","src","Logo","alt","logoImage","nav","navbar","link","marginLeft","zIndex","children","ReactGA","initialize","WrappedComponent","options","trackPage","page","pageview","HOC","location","pathname","Homepage","lazy","Test","Testpage","YouthAdvocates","PeerCounsellor","Profile","Questions","Result","Advocates","Blogs","Blog","Blogger","FreeCounseling","College","Chat","CreateProfile","App","fallback","path","component","withTracker","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.68ebe2e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hope Logo.95fb7605.svg\";","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  cursor: pointer;\n  padding: 0 10px;\n`;\n\nconst Bar = styled(animated.div)`\n  width: 40px;\n  height: 5px;\n  background-color: ${(props) => props.color};\n  border-radius: 20px;\n  margin-top: 6px;\n`;\nconst Hamburger = (props) => {\n  const [value, set] = useSpring(() => ({ opacity: 1, angle: 0 }));\n  useEffect(() => {\n    set(props.toggle ? { opacity: 1, angle: 0 } : { opacity: 0, angle: 45 });\n  }, [props.toggle, set]);\n  return (\n    <Wrapper onClick={props.onClick}>\n      <Bar\n        style={{\n          opacity: value.opacity.interpolate((x) => x),\n        }}\n        color={props.color}\n      />\n      <Bar\n        style={{\n          transform: value.angle.interpolate((x) => `rotateZ(${x}deg)`),\n        }}\n        color={props.color}\n      />\n      <Bar\n        style={{\n          position: \"absolute\",\n          top: \"5px\",\n          transform: value.angle.interpolate((x) => `rotateZ(-${x}deg)`),\n        }}\n        color={props.color}\n      />\n      <Bar\n        style={{\n          opacity: value.opacity.interpolate((x) => x),\n        }}\n        color={props.color}\n      />\n    </Wrapper>\n  );\n};\n\nexport default Hamburger;\n","import React, { useState } from \"react\";\nimport styles from \"../styles/Layout.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useSpring, animated } from \"react-spring\";\nimport Hamburger from \"./Hamburger\";\nimport Logo from \"../asset/Hope Logo.svg\";\n\nconst Layout = (props) => {\n  const [opacity, setOpacity] = useState({ opacity: 0, display: \"none\" });\n  const [toggle, setToggle] = useState(true);\n  const [value, set] = useSpring(() => ({\n    width: 0,\n  }));\n\n  const openMenuHandler = () => {\n    setToggle((state) => !state);\n    setOpacity(\n      toggle ? { opacity: 1, display: \"flex\" } : { opacity: 0, display: \"none\" }\n    );\n    set(toggle ? { width: 70 } : { width: 0 });\n  };\n  return (\n    <>\n      <header className={styles.head}>\n        <div className={styles.logo}>\n          <Link to=\"/\">\n            <img src={Logo} alt=\"Findhope\" className={styles.logoImage} />\n          </Link>\n        </div>\n        <animated.nav\n          className={styles.navbar}\n          style={{ width: value.width.interpolate((x) => x + \"vw\") }}\n        >\n          <div style={opacity}>\n            <span>\n              <div>\n                <Link to=\"/\" className={styles.link} onClick={openMenuHandler}>\n                  Home\n                </Link>\n              </div>\n              <div>\n                <Link\n                  to=\"/youthadvocates\"\n                  className={styles.link}\n                  onClick={openMenuHandler}\n                >\n                  Advocate Program\n                </Link>\n              </div>\n              <div>\n                <Link\n                  to=\"/test\"\n                  className={styles.link}\n                  onClick={openMenuHandler}\n                >\n                  Self Assessments\n                </Link>\n              </div>\n              <div>\n                <Link\n                  to=\"/freecounseling\"\n                  className={styles.link}\n                  onClick={openMenuHandler}\n                >\n                  Free Support\n                </Link>\n              </div>\n              <div>\n                <Link\n                  to=\"/blogs\"\n                  className={styles.link}\n                  onClick={openMenuHandler}\n                >\n                  Blog\n                </Link>\n              </div>\n            </span>\n          </div>\n        </animated.nav>\n        <div\n          style={{ marginLeft: \"40px\", zIndex: 200 }}\n          onClick={openMenuHandler}\n        >\n          <Hamburger color=\"white\" toggle={toggle} />\n        </div>\n      </header>\n      {props.children}\n    </>\n  );\n};\n\nexport default Layout;\n// <div className={styles.close} onClick={clickHandler}>\n// <div className={styles.cross1}></div>\n// <div className={styles.cross2}></div>\n// </div>\n","import React, { useEffect } from \"react\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-174641907-1\");\n\nexport default (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options,\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = (props) => {\n    useEffect(() => trackPage(props.location.pathname), [\n      props.location.pathname,\n    ]);\n\n    return <WrappedComponent {...props} />;\n  };\n\n  return HOC;\n};\n","import React, { Suspense, lazy } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./components/Layout\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport withTracker from \"./withTracker\";\nconst Homepage = lazy(() => import(\"./containers/homepage\"));\nconst Test = lazy(() => import(\"./containers/Test\"));\nconst Testpage = lazy(() => import(\"./containers/Testpage\"));\nconst YouthAdvocates = lazy(() => import(\"./containers/YouthAdvocates\"));\nconst PeerCounsellor = lazy(() => import(\"./containers/PeerCounsellor\"));\nconst Profile = lazy(() => import(\"./containers/Profile\"));\nconst Questions = lazy(() => import(\"./containers/Questions\"));\nconst Result = lazy(() => import(\"./containers/Result\"));\nconst Advocates = lazy(() => import(\"./containers/Advocates\"));\nconst Blogs = lazy(() => import(\"./containers/Blogs\"));\nconst Blog = lazy(() => import(\"./containers/Blog\"));\nconst Blogger = lazy(() => import(\"./containers/Blogger\"));\nconst FreeCounseling = lazy(() => import(\"./containers/FreeCounseling\"));\nconst College = lazy(() => import(\"./containers/college\"));\nconst Chat = lazy(() => import(\"./containers/Chat\"));\nconst CreateProfile = lazy(() => import(\"./containers/CreateProfile\"));\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout>\n          <Suspense fallback={<div>loading...</div>}>\n            <Switch>\n              <Route path=\"/test/:testName\" component={withTracker(Test)} />\n              <Route path=\"/test\">\n                <Testpage />\n              </Route>\n              <Route path=\"/createprofile\">\n                <CreateProfile />\n              </Route>\n              <Route\n                path=\"/freecounseling\"\n                component={withTracker(PeerCounsellor)}\n              />\n              <Route\n                path=\"/freecounselingform\"\n                component={withTracker(FreeCounseling)}\n              />\n              <Route\n                path=\"/youthAdvocates\"\n                component={withTracker(YouthAdvocates)}\n              />\n              <Route path=\"/profile/:name\">\n                <Profile />\n              </Route>\n              <Route path=\"/questions/:testname\">\n                <Questions />\n              </Route>\n              <Route path=\"/result/:testname/:score/:tips\">\n                <Result />\n              </Route>\n              <Route path=\"/youthadvocate/:name\">\n                <Advocates />\n              </Route>\n              <Route path=\"/blogs\">\n                <Blogs />\n              </Route>\n              <Route path=\"/blog/:name\">\n                <Blog />\n              </Route>\n              <Route path=\"/blogger/:name\">\n                <Blogger />\n              </Route>\n              <Route exact path=\"/chat\" component={withTracker(Chat)} />\n              <Route exact path=\"/:name\" component={College} />\n              <Route exact path=\"/\" component={withTracker(Homepage)} />\n            </Switch>\n          </Suspense>\n        </Layout>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Layout_head__1JWOz\",\"logo\":\"Layout_logo__Qo8jw\",\"logoImage\":\"Layout_logoImage__8XwpX\",\"navbar\":\"Layout_navbar__inPHH\",\"link\":\"Layout_link__AhyU4\",\"close\":\"Layout_close__173dj\",\"cross1\":\"Layout_cross1__Yy51I\",\"cross2\":\"Layout_cross2__1gDcw\",\"hamburger\":\"Layout_hamburger__PzmZA\",\"bar\":\"Layout_bar__2QNO-\"};"],"sourceRoot":""}